package it.unibs.PgAr2023.Esame;

import java.util.AbstractMap;
import java.util.Map;

public abstract class Tabelle {
    
    static Map<Integer, Character> mappaMesi = Map.ofEntries(
        new AbstractMap.SimpleEntry<Integer, Character>(1, 'A'),
        new AbstractMap.SimpleEntry<Integer, Character>(2, 'B'),
        new AbstractMap.SimpleEntry<Integer, Character>(3, 'C'),
        new AbstractMap.SimpleEntry<Integer, Character>(4, 'D'),
        new AbstractMap.SimpleEntry<Integer, Character>(5, 'E'),
        new AbstractMap.SimpleEntry<Integer, Character>(6, 'H'),
        new AbstractMap.SimpleEntry<Integer, Character>(7, 'L'),
        new AbstractMap.SimpleEntry<Integer, Character>(8, 'M'),
        new AbstractMap.SimpleEntry<Integer, Character>(9, 'P'),
        new AbstractMap.SimpleEntry<Integer, Character>(10, 'R'),
        new AbstractMap.SimpleEntry<Integer, Character>(11, 'S'),
        new AbstractMap.SimpleEntry<Integer, Character>(12, 'T')

    );

    static Map<Character, Integer> mappaCINPari = Map.ofEntries(
        new AbstractMap.SimpleEntry<Character, Integer>('0', 0),
        new AbstractMap.SimpleEntry<Character, Integer>('1',1),
        new AbstractMap.SimpleEntry<Character, Integer>('2', 2),
        new AbstractMap.SimpleEntry<Character, Integer>('3',3),
        new AbstractMap.SimpleEntry<Character, Integer>('4', 4),
        new AbstractMap.SimpleEntry<Character, Integer>('5',5),
        new AbstractMap.SimpleEntry<Character, Integer>('6', 6),
        new AbstractMap.SimpleEntry<Character, Integer>('7',7),
        new AbstractMap.SimpleEntry<Character, Integer>('8', 8),
        new AbstractMap.SimpleEntry<Character, Integer>('9',9),
        new AbstractMap.SimpleEntry<Character, Integer>('A', 0),
        new AbstractMap.SimpleEntry<Character, Integer>('B',1),
        new AbstractMap.SimpleEntry<Character, Integer>('C', 2),
        new AbstractMap.SimpleEntry<Character, Integer>('D',3),
        new AbstractMap.SimpleEntry<Character, Integer>('E', 4),
        new AbstractMap.SimpleEntry<Character, Integer>('F',5),
        new AbstractMap.SimpleEntry<Character, Integer>('G', 6),
        new AbstractMap.SimpleEntry<Character, Integer>('H',7),
        new AbstractMap.SimpleEntry<Character, Integer>('I', 8),
        new AbstractMap.SimpleEntry<Character, Integer>('J',9),
        new AbstractMap.SimpleEntry<Character, Integer>('K', 10),
        new AbstractMap.SimpleEntry<Character, Integer>('L',11),
        new AbstractMap.SimpleEntry<Character, Integer>('M', 12),
        new AbstractMap.SimpleEntry<Character, Integer>('N',13),
        new AbstractMap.SimpleEntry<Character, Integer>('O', 14),
        new AbstractMap.SimpleEntry<Character, Integer>('P',15),
        new AbstractMap.SimpleEntry<Character, Integer>('Q', 16),
        new AbstractMap.SimpleEntry<Character, Integer>('R',17),
        new AbstractMap.SimpleEntry<Character, Integer>('S', 18),
        new AbstractMap.SimpleEntry<Character, Integer>('T',19),
        new AbstractMap.SimpleEntry<Character, Integer>('U', 20),
        new AbstractMap.SimpleEntry<Character, Integer>('V',21),
        new AbstractMap.SimpleEntry<Character, Integer>('W', 22),
        new AbstractMap.SimpleEntry<Character, Integer>('X',23),
        new AbstractMap.SimpleEntry<Character, Integer>('Y', 24),
        new AbstractMap.SimpleEntry<Character, Integer>('Z',25)
    );

    static Map<Character, Integer> mappaCINDispari = Map.ofEntries(
        new AbstractMap.SimpleEntry<Character, Integer>('0', 1),
        new AbstractMap.SimpleEntry<Character, Integer>('1',0),
        new AbstractMap.SimpleEntry<Character, Integer>('2', 5),
        new AbstractMap.SimpleEntry<Character, Integer>('3',7),
        new AbstractMap.SimpleEntry<Character, Integer>('4', 9),
        new AbstractMap.SimpleEntry<Character, Integer>('5',13),
        new AbstractMap.SimpleEntry<Character, Integer>('6', 15),
        new AbstractMap.SimpleEntry<Character, Integer>('7',17),
        new AbstractMap.SimpleEntry<Character, Integer>('8', 19),
        new AbstractMap.SimpleEntry<Character, Integer>('9',21),
        new AbstractMap.SimpleEntry<Character, Integer>('A', 1),
        new AbstractMap.SimpleEntry<Character, Integer>('B',0),
        new AbstractMap.SimpleEntry<Character, Integer>('C', 5),
        new AbstractMap.SimpleEntry<Character, Integer>('D',7),
        new AbstractMap.SimpleEntry<Character, Integer>('E', 9),
        new AbstractMap.SimpleEntry<Character, Integer>('F',13),
        new AbstractMap.SimpleEntry<Character, Integer>('G', 15),
        new AbstractMap.SimpleEntry<Character, Integer>('H',17),
        new AbstractMap.SimpleEntry<Character, Integer>('I', 19),
        new AbstractMap.SimpleEntry<Character, Integer>('J',21),
        new AbstractMap.SimpleEntry<Character, Integer>('K', 2),
        new AbstractMap.SimpleEntry<Character, Integer>('L',4),
        new AbstractMap.SimpleEntry<Character, Integer>('M', 18),
        new AbstractMap.SimpleEntry<Character, Integer>('N',20),
        new AbstractMap.SimpleEntry<Character, Integer>('O', 11),
        new AbstractMap.SimpleEntry<Character, Integer>('P',3),
        new AbstractMap.SimpleEntry<Character, Integer>('Q', 6),
        new AbstractMap.SimpleEntry<Character, Integer>('R',8),
        new AbstractMap.SimpleEntry<Character, Integer>('S', 12),
        new AbstractMap.SimpleEntry<Character, Integer>('T',14),
        new AbstractMap.SimpleEntry<Character, Integer>('U',16),
        new AbstractMap.SimpleEntry<Character, Integer>('V',10),
        new AbstractMap.SimpleEntry<Character, Integer>('W', 22),
        new AbstractMap.SimpleEntry<Character, Integer>('X',25),
        new AbstractMap.SimpleEntry<Character, Integer>('Y', 24),
        new AbstractMap.SimpleEntry<Character, Integer>('Z',23)
    );

    static Map<Integer, Character> mappaResti = Map.ofEntries(
        new AbstractMap.SimpleEntry<Integer, Character>(0, 'A'),
        new AbstractMap.SimpleEntry<Integer, Character>(1, 'B'),
        new AbstractMap.SimpleEntry<Integer, Character>(2, 'C'),
        new AbstractMap.SimpleEntry<Integer, Character>(3, 'D'),
        new AbstractMap.SimpleEntry<Integer, Character>(4, 'E'),
        new AbstractMap.SimpleEntry<Integer, Character>(5, 'F'),
        new AbstractMap.SimpleEntry<Integer, Character>(6, 'G'),
        new AbstractMap.SimpleEntry<Integer, Character>(7, 'H'),
        new AbstractMap.SimpleEntry<Integer, Character>(8, 'I'),
        new AbstractMap.SimpleEntry<Integer, Character>(9, 'J'),
        new AbstractMap.SimpleEntry<Integer, Character>(10, 'K'),
        new AbstractMap.SimpleEntry<Integer, Character>(11, 'L'),
        new AbstractMap.SimpleEntry<Integer, Character>(12, 'M'),
        new AbstractMap.SimpleEntry<Integer, Character>(13, 'N'),
        new AbstractMap.SimpleEntry<Integer, Character>(14, 'O'),
        new AbstractMap.SimpleEntry<Integer, Character>(15, 'P'),
        new AbstractMap.SimpleEntry<Integer, Character>(16, 'Q'),
        new AbstractMap.SimpleEntry<Integer, Character>(17, 'R'),
        new AbstractMap.SimpleEntry<Integer, Character>(18, 'S'),
        new AbstractMap.SimpleEntry<Integer, Character>(19, 'T'),
        new AbstractMap.SimpleEntry<Integer, Character>(20, 'U'),
        new AbstractMap.SimpleEntry<Integer, Character>(21, 'V'),
        new AbstractMap.SimpleEntry<Integer, Character>(22, 'W'),
        new AbstractMap.SimpleEntry<Integer, Character>(23, 'X'),
        new AbstractMap.SimpleEntry<Integer, Character>(24, 'Y'),
        new AbstractMap.SimpleEntry<Integer, Character>(25, 'Z')
    );
}
